#!/bin/sh
#
### BEGIN INIT INFO
# Provides: pf9-hostagent
# Required-Start: $network
# Required-Stop: $network
# Default-Start: 3 5
# Default-Stop: 0 1 2 6
# Description: Start the platform9 host agent
### END INIT INFO

# read & export proxy information
. /etc/environment

progname="pf9-hostd"
SHORT_NAME="hostagent"
svcname="pf9-${SHORT_NAME}"

SERVER_BIN="/opt/pf9/${SHORT_NAME}/bin/${progname}"

SERVER_OPTS=""

SERVER_LOGFILE=/var/log/pf9/${SHORT_NAME}-daemon.log

PIDFILE=/var/run/${svcname}.pid
PYTHON_EGG_CACHE=/tmp/python-eggs

# Source function library.
. /lib/lsb/init-functions


RETVAL=0
uid=`id | cut -d\( -f1 | cut -d= -f2`

start() {

    [ -f $SERVER_BIN ] || exit 5

    # Make sure the service is not already running.
    if status > /dev/null ; then
        log_success_msg "${svcname} is already up (PID `pidofproc $progname`)"
        exit 0
    fi

    # Only root can start the service
    [ $uid -ne 0 ] && exit 4

    export PYTHON_EGG_CACHE=$PYTHON_EGG_CACHE
    mkdir -p $PYTHON_EGG_CACHE
    chown -R pf9:pf9group $PYTHON_EGG_CACHE

    touch $PIDFILE
    chown pf9:pf9group $PIDFILE
    LD_LIBRARY_PATH="/opt/pf9/python/pf9-lib:/opt/pf9/python/pf9-hostagent-lib:${LD_LIBRARY_PATH}" \
    PYTHONPATH="/opt/pf9/python/lib/python2.7:${PYTHONPATH}" \
    /sbin/start-stop-daemon --start --name $progname --oknodo --chuid pf9:pf9group \
            --quiet --startas /bin/bash -- -c \
            "$SERVER_BIN $SERVER_OPTS >> $SERVER_LOGFILE 2>&1 & echo \$! > $PIDFILE"
    RETVAL=$?
    if [ "$RETVAL" -eq "0" ]; then
        log_success_msg "Started:" "$svcname"
    else
        log_failure_msg "Failed to start:" "$svcname"
    fi
    return $RETVAL
}

stop() {
    /sbin/start-stop-daemon --stop --oknodo --quiet --retry 10 --name $progname

    RETVAL=$?
    if [ "$RETVAL" -eq "0" ]; then
        log_success_msg "Stopped:" "$svcname"
        rm -f $PIDFILE
    else
        log_failure_msg "Failed to stop:" "$svcname"
    fi
    return $RETVAL
}

status() {
    status_of_proc $progname $svcname
}

# See how we were called.
case "$1" in
    start)
        start
        RETVAL=$?
        ;;
    stop)
        stop
        RETVAL=$?
        ;;
    status)
        status
        RETVAL=$?
        ;;
    restart | reload | force-reload)
        stop
        start
        RETVAL=$?
        ;;
    condrestart | try-restart)
        if status > /dev/null; then
            stop
            start
            RETVAL=$?
        fi
        ;;
    *)
        echo "Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart|try-restart}"
        RETVAL=2
        ;;
esac

exit $RETVAL
