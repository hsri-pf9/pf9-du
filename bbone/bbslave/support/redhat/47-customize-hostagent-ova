#!/bin/sh
# Copyright (c) 2015 Platform9 Systems Inc.

# This script creates the VMWare appliance.
# It requires the installer script to already exist.


set -v
set -u
set -e
set -x

OVF_BASE_DIR=/opt/pf9/vmware
CURR_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ROOT_DIR=$CURR_DIR/../
PRIVATE_FILES_DIR=$ROOT_DIR/www/private

function create_appliance {
    ova_short_name=$1
    ova_name=$2
    ova_symlink_name=$3
    ova_path=$4
    iso_name=$5
    vmdk_name=$6
    
    pushd ${OVF_BASE_DIR}
    VMDK_SIZE=$(stat -c '%s' ${vmdk_name})
    ISO_SIZE=$(stat -c '%s' ${iso_name})
    # Add correct VMDK and ISO size to OVF
    sed -e "s/__VMDK_SIZE__/${VMDK_SIZE}/" -e "s/__ISO_SIZE__/${ISO_SIZE}/" ${ova_short_name}-template.ovf > ${ova_short_name}.ovf
    rm -f ${ova_short_name}-template.ovf
    # Create a manifest file
    openssl sha1 ${vmdk_name} ${ova_short_name}.ovf ${iso_name} > ${ova_short_name}.mf
    # Files need to be tar'ed up in a particular order - ovf, mf, vmdk and then iso
    tar -cvf ${ova_short_name}.ova \
             ${ova_short_name}{.ovf,.mf} \
             ${vmdk_name} \
             ${iso_name}
    popd

    mv ${OVF_BASE_DIR}/${ova_short_name}.ova ${ova_path}

    pushd $PRIVATE_FILES_DIR
    ln -sf $ova_name $ova_symlink_name
    popd
}

VERSION=__VERSION__
RELEASE=__BUILDNUM__.__GITHASH__
VERSION=${HOST_AGENT_VERSION:-${VERSION}}
RELEASE=${HOST_AGENT_RELEASE:-${RELEASE}}
MGMT_FQDN=${MGMT_FQDN:-${DU_FQDN}}

CURR_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ROOT_DIR=$CURR_DIR/../

APPLIANCE_DISK_NAME=platform9-vmware-appliance-v2-disk1.vmdk
INSTALLER_FILENAME=platform9-install-redhat.sh
INSTALLER_PATH=${PRIVATE_FILES_DIR}/${INSTALLER_FILENAME}
CUSTOMIZE_SCRIPT_DIR=/opt/pf9/du-customize/vmw_scripts
# Short name excludes extension
OVA_SHORT_NAME=platform9-vmware-appliance
OVA_NAME=${OVA_SHORT_NAME}-${VERSION}-${RELEASE}.ova
OVA_PATH=${PRIVATE_FILES_DIR}/${OVA_SHORT_NAME}-${VERSION}-${RELEASE}.ova
OVA_SYMLINK_NAME=${OVA_SHORT_NAME}.ova

ISO_NAME=hostagent.iso
ISO_PATH=${OVF_BASE_DIR}/${ISO_NAME}
ISO_STAGING_DIR=`mktemp -d`
ISO_INSTALLER_DIR=${ISO_STAGING_DIR}/installer

mkdir -p ${ISO_INSTALLER_DIR}

cp ${INSTALLER_PATH} ${ISO_INSTALLER_DIR}
cp ${CUSTOMIZE_SCRIPT_DIR}/* ${ISO_STAGING_DIR}
genisoimage -o ${ISO_PATH} -r ${ISO_STAGING_DIR}

create_appliance ${OVA_SHORT_NAME} ${OVA_NAME} ${OVA_SYMLINK_NAME} ${OVA_PATH} ${ISO_NAME} ${APPLIANCE_DISK_NAME}

# Cleanup
rm -fr $OVF_BASE_DIR
rm -fr $ISO_STAGING_DIR
