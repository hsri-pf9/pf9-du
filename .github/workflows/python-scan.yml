# name: Python Security & Linting

# on:
#   push:
#     branches: [ harsh ]
#   pull_request:
#     branches: [ harsh ]
#   schedule:
#     - cron: '0 0 * * 0'  # Every Monday at 12 PM UTC

# jobs:
#   setup:
#     name: Shared Setup
#     runs-on: ubuntu-latest
#     outputs:
#       python-version: '3.10'
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#   bandit_scan:
#     name: Bandit Security Scan (Medium & High)
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'

#       - name: Install Bandit
#         run: pip install bandit

#       - name: Run Bandit (MEDIUM & HIGH only)
#         run: |
#           echo "🚨 Running Bandit for medium and high severity issues..."
#           bandit -r . --severity-level high || echo "⚠️ Bandit scan completed with issues. See above."

#   safety_scan:
#     name: Safety Dependency Scan
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'

#       - name: Install Safety
#         run: |
#           pip install -r requirements.txt || true
#           pip install safety

#       - name: Run Safety (Dependency Vulnerabilities)
#         env:
        #   SAFETY_API_KEY: #
#         run: |
#           echo "🔒 Running Safety vulnerability scan..."
#           safety scan --full-report --ci || echo "⚠️ Vulnerabilities found. See report above."

#   ruff_lint:
#     name: Ruff Major Lint Check
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'

#       - name: Install Ruff
#         run: pip install ruff

#       - name: Run Ruff (Major Errors Only)
#         run: |
#           echo "🧹 Running Ruff for major lint issues (E, F, I)..."
#           ruff check . --select E,F,I --ignore ALL || echo "⚠️ Ruff found issues, continuing..."

name: Python Security & Linting

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Every Monday at 12 PM UTC

jobs:
  setup:
    name: Shared Setup
    runs-on: ubuntu-latest
    outputs:
      python-version: '3.10'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

  bandit_scan:
    name: Bandit Security Scan (High)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit (MEDIUM & HIGH only)
        run: |
          echo "🚨 Running Bandit for medium and high severity issues..."
          bandit -r . --severity-level high

  semgrep_scan:
    name: Semgrep SAST Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Semgrep (default rules)
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/ci"
        # env:
        #   SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

  codeql_scan:
    name: CodeQL Static Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write  # Required for CodeQL results
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  ruff_lint:
    name: Ruff Major Lint Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Ruff
        run: pip install ruff

      - name: Run Ruff Check (E, F, I)
        id: check
        run: |
          echo "🧹 Running Ruff for major lint issues..."
          ruff check . --select E,F,I --exit-zero > ruff_output.txt
          cat ruff_output.txt
          if grep -qE "." ruff_output.txt; then
            echo "failed=true" >> $GITHUB_OUTPUT
            echo "❌ Ruff found issues. Failing job."
            exit 1
          else
            echo "failed=false" >> $GITHUB_OUTPUT
            echo "✅ No major lint issues found."
          fi

  autofix_pr:
    name: Auto Fix and Create PR
    runs-on: ubuntu-latest
    needs: [ruff_lint]
    if: always()  # Always run to check for possible autofixes
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Ruff (for autofix)
        run: pip install ruff

      - name: Run Ruff Autofix
        run: ruff check . --select E,F,I --fix

      - name: Commit & Push Fixes (if any)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b autofix/ruff-fixes || git checkout autofix/ruff-fixes
          git add .
          if git diff --cached --quiet; then
            echo "✅ No fixes needed."
          else
            git commit -m "fix: Apply Ruff autofixes"
            git push origin HEAD
          fi

      - name: Create PR for Fixes
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "fix: Apply Ruff autofixes"
          branch: autofix/ruff-fixes
          title: "chore: Auto lint fixes (Ruff)"
          body: |
            This PR includes auto-generated lint fixes from Ruff.
          labels: auto-fix
